import requests
from bs4 import BeautifulSoup
from cve_monitor.logging import logger


# Lay thong tin CVE tu NIST
def get_cve_info(cve_id):
    nist_url = "https://nvd.nist.gov/vuln/detail/" + cve_id
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36"}
    # Lay source html
    page = requests.get(nist_url, headers=headers)
    source = BeautifulSoup(page.content, 'html.parser')

    # Lay description cua lo hong
    description = source.find('div', class_='col-lg-9 col-md-7 col-sm-12').p.get_text()
    base_score = source.find('span', class_='severityDetail').a.get_text()
    try:
        # Lay thong tin ve diem CVSS va Muc do cua lo hong
        cvss_score = base_score.split(" ")[0]
        # Fix: "IndexError: list index out of range"
        # level = base_score.split(" ")[1]
        level = base_score.split(" ")[-1]
    except Exception as ex:
        cvss_score, level = "N/A", "N/A"
        logger.warning(str(ex))

    try:
        # Lay thong tin ve attack Vector
        attack_vector = ""
        vector = source.find('span', class_='tooltipCvss3NistMetrics').get_text()
        attack_vector_raw = vector.split("/")[1]
        if attack_vector_raw.split(":")[1] == "N":
            attack_vector = "Network"
        elif attack_vector_raw.split(":")[1] == "L":
            attack_vector = "Local"
        elif attack_vector_raw.split(":")[1] == "A":
            attack_vector = "Adjacent Network"
        elif attack_vector_raw.split(":")[1] == "P":
            attack_vector = "Physical"
    except Exception as ex:
        attack_vector = "N/A"
        logger.warning(str(ex))
    return description, cvss_score, level, attack_vector
